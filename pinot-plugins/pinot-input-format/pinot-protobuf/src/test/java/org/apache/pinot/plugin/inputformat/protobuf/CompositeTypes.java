/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: composite_types.proto

package org.apache.pinot.plugin.inputformat.protobuf;

public final class CompositeTypes {
  private CompositeTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CompositeMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.pinot.plugin.inputformat.protobuf.CompositeMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
     * @return Whether the testMessage field is set.
     */
    boolean hasTestMessage();
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
     * @return The testMessage.
     */
    ComplexTypes.TestMessage getTestMessage();
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
     */
    ComplexTypes.TestMessageOrBuilder getTestMessageOrBuilder();

    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
     * @return Whether the sampleRecord field is set.
     */
    boolean hasSampleRecord();
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
     * @return The sampleRecord.
     */
    Sample.SampleRecord getSampleRecord();
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
     */
    Sample.SampleRecordOrBuilder getSampleRecordOrBuilder();
  }
  /**
   * <pre>
   * Test message used for testing the ProtoBufRecordExtractor
   * </pre>
   *
   * Protobuf type {@code org.apache.pinot.plugin.inputformat.protobuf.CompositeMessage}
   */
  public static final class CompositeMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.pinot.plugin.inputformat.protobuf.CompositeMessage)
      CompositeMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CompositeMessage.newBuilder() to construct.
    private CompositeMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CompositeMessage() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new CompositeMessage();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CompositeMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              ComplexTypes.TestMessage.Builder subBuilder = null;
              if (testMessage_ != null) {
                subBuilder = testMessage_.toBuilder();
              }
              testMessage_ = input.readMessage(ComplexTypes.TestMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(testMessage_);
                testMessage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              Sample.SampleRecord.Builder subBuilder = null;
              if (sampleRecord_ != null) {
                subBuilder = sampleRecord_.toBuilder();
              }
              sampleRecord_ = input.readMessage(Sample.SampleRecord.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sampleRecord_);
                sampleRecord_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CompositeTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CompositeTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CompositeMessage.class, Builder.class);
    }

    public static final int TEST_MESSAGE_FIELD_NUMBER = 1;
    private ComplexTypes.TestMessage testMessage_;
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
     * @return Whether the testMessage field is set.
     */
    @Override
    public boolean hasTestMessage() {
      return testMessage_ != null;
    }
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
     * @return The testMessage.
     */
    @Override
    public ComplexTypes.TestMessage getTestMessage() {
      return testMessage_ == null ? ComplexTypes.TestMessage.getDefaultInstance() : testMessage_;
    }
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
     */
    @Override
    public ComplexTypes.TestMessageOrBuilder getTestMessageOrBuilder() {
      return getTestMessage();
    }

    public static final int SAMPLE_RECORD_FIELD_NUMBER = 2;
    private Sample.SampleRecord sampleRecord_;
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
     * @return Whether the sampleRecord field is set.
     */
    @Override
    public boolean hasSampleRecord() {
      return sampleRecord_ != null;
    }
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
     * @return The sampleRecord.
     */
    @Override
    public Sample.SampleRecord getSampleRecord() {
      return sampleRecord_ == null ? Sample.SampleRecord.getDefaultInstance() : sampleRecord_;
    }
    /**
     * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
     */
    @Override
    public Sample.SampleRecordOrBuilder getSampleRecordOrBuilder() {
      return getSampleRecord();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (testMessage_ != null) {
        output.writeMessage(1, getTestMessage());
      }
      if (sampleRecord_ != null) {
        output.writeMessage(2, getSampleRecord());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (testMessage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTestMessage());
      }
      if (sampleRecord_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSampleRecord());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CompositeMessage)) {
        return super.equals(obj);
      }
      CompositeMessage other = (CompositeMessage) obj;

      if (hasTestMessage() != other.hasTestMessage()) return false;
      if (hasTestMessage()) {
        if (!getTestMessage()
            .equals(other.getTestMessage())) return false;
      }
      if (hasSampleRecord() != other.hasSampleRecord()) return false;
      if (hasSampleRecord()) {
        if (!getSampleRecord()
            .equals(other.getSampleRecord())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTestMessage()) {
        hash = (37 * hash) + TEST_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTestMessage().hashCode();
      }
      if (hasSampleRecord()) {
        hash = (37 * hash) + SAMPLE_RECORD_FIELD_NUMBER;
        hash = (53 * hash) + getSampleRecord().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CompositeMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompositeMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompositeMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompositeMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompositeMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompositeMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompositeMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CompositeMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CompositeMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CompositeMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CompositeMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CompositeMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CompositeMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Test message used for testing the ProtoBufRecordExtractor
     * </pre>
     *
     * Protobuf type {@code org.apache.pinot.plugin.inputformat.protobuf.CompositeMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.pinot.plugin.inputformat.protobuf.CompositeMessage)
        CompositeMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CompositeTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CompositeTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CompositeMessage.class, Builder.class);
      }

      // Construct using org.apache.pinot.plugin.inputformat.protobuf.CompositeTypes.CompositeMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (testMessageBuilder_ == null) {
          testMessage_ = null;
        } else {
          testMessage_ = null;
          testMessageBuilder_ = null;
        }
        if (sampleRecordBuilder_ == null) {
          sampleRecord_ = null;
        } else {
          sampleRecord_ = null;
          sampleRecordBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CompositeTypes.internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_descriptor;
      }

      @Override
      public CompositeMessage getDefaultInstanceForType() {
        return CompositeMessage.getDefaultInstance();
      }

      @Override
      public CompositeMessage build() {
        CompositeMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public CompositeMessage buildPartial() {
        CompositeMessage result = new CompositeMessage(this);
        if (testMessageBuilder_ == null) {
          result.testMessage_ = testMessage_;
        } else {
          result.testMessage_ = testMessageBuilder_.build();
        }
        if (sampleRecordBuilder_ == null) {
          result.sampleRecord_ = sampleRecord_;
        } else {
          result.sampleRecord_ = sampleRecordBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CompositeMessage) {
          return mergeFrom((CompositeMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CompositeMessage other) {
        if (other == CompositeMessage.getDefaultInstance()) return this;
        if (other.hasTestMessage()) {
          mergeTestMessage(other.getTestMessage());
        }
        if (other.hasSampleRecord()) {
          mergeSampleRecord(other.getSampleRecord());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CompositeMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CompositeMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private ComplexTypes.TestMessage testMessage_;
      private com.google.protobuf.SingleFieldBuilderV3<
          ComplexTypes.TestMessage, ComplexTypes.TestMessage.Builder, ComplexTypes.TestMessageOrBuilder> testMessageBuilder_;
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       * @return Whether the testMessage field is set.
       */
      public boolean hasTestMessage() {
        return testMessageBuilder_ != null || testMessage_ != null;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       * @return The testMessage.
       */
      public ComplexTypes.TestMessage getTestMessage() {
        if (testMessageBuilder_ == null) {
          return testMessage_ == null ? ComplexTypes.TestMessage.getDefaultInstance() : testMessage_;
        } else {
          return testMessageBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       */
      public Builder setTestMessage(ComplexTypes.TestMessage value) {
        if (testMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          testMessage_ = value;
          onChanged();
        } else {
          testMessageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       */
      public Builder setTestMessage(
          ComplexTypes.TestMessage.Builder builderForValue) {
        if (testMessageBuilder_ == null) {
          testMessage_ = builderForValue.build();
          onChanged();
        } else {
          testMessageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       */
      public Builder mergeTestMessage(ComplexTypes.TestMessage value) {
        if (testMessageBuilder_ == null) {
          if (testMessage_ != null) {
            testMessage_ =
              ComplexTypes.TestMessage.newBuilder(testMessage_).mergeFrom(value).buildPartial();
          } else {
            testMessage_ = value;
          }
          onChanged();
        } else {
          testMessageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       */
      public Builder clearTestMessage() {
        if (testMessageBuilder_ == null) {
          testMessage_ = null;
          onChanged();
        } else {
          testMessage_ = null;
          testMessageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       */
      public ComplexTypes.TestMessage.Builder getTestMessageBuilder() {
        
        onChanged();
        return getTestMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       */
      public ComplexTypes.TestMessageOrBuilder getTestMessageOrBuilder() {
        if (testMessageBuilder_ != null) {
          return testMessageBuilder_.getMessageOrBuilder();
        } else {
          return testMessage_ == null ?
              ComplexTypes.TestMessage.getDefaultInstance() : testMessage_;
        }
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.TestMessage test_message = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ComplexTypes.TestMessage, ComplexTypes.TestMessage.Builder, ComplexTypes.TestMessageOrBuilder>
          getTestMessageFieldBuilder() {
        if (testMessageBuilder_ == null) {
          testMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ComplexTypes.TestMessage, ComplexTypes.TestMessage.Builder, ComplexTypes.TestMessageOrBuilder>(
                  getTestMessage(),
                  getParentForChildren(),
                  isClean());
          testMessage_ = null;
        }
        return testMessageBuilder_;
      }

      private Sample.SampleRecord sampleRecord_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Sample.SampleRecord, Sample.SampleRecord.Builder, Sample.SampleRecordOrBuilder> sampleRecordBuilder_;
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       * @return Whether the sampleRecord field is set.
       */
      public boolean hasSampleRecord() {
        return sampleRecordBuilder_ != null || sampleRecord_ != null;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       * @return The sampleRecord.
       */
      public Sample.SampleRecord getSampleRecord() {
        if (sampleRecordBuilder_ == null) {
          return sampleRecord_ == null ? Sample.SampleRecord.getDefaultInstance() : sampleRecord_;
        } else {
          return sampleRecordBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       */
      public Builder setSampleRecord(Sample.SampleRecord value) {
        if (sampleRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sampleRecord_ = value;
          onChanged();
        } else {
          sampleRecordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       */
      public Builder setSampleRecord(
          Sample.SampleRecord.Builder builderForValue) {
        if (sampleRecordBuilder_ == null) {
          sampleRecord_ = builderForValue.build();
          onChanged();
        } else {
          sampleRecordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       */
      public Builder mergeSampleRecord(Sample.SampleRecord value) {
        if (sampleRecordBuilder_ == null) {
          if (sampleRecord_ != null) {
            sampleRecord_ =
              Sample.SampleRecord.newBuilder(sampleRecord_).mergeFrom(value).buildPartial();
          } else {
            sampleRecord_ = value;
          }
          onChanged();
        } else {
          sampleRecordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       */
      public Builder clearSampleRecord() {
        if (sampleRecordBuilder_ == null) {
          sampleRecord_ = null;
          onChanged();
        } else {
          sampleRecord_ = null;
          sampleRecordBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       */
      public Sample.SampleRecord.Builder getSampleRecordBuilder() {
        
        onChanged();
        return getSampleRecordFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       */
      public Sample.SampleRecordOrBuilder getSampleRecordOrBuilder() {
        if (sampleRecordBuilder_ != null) {
          return sampleRecordBuilder_.getMessageOrBuilder();
        } else {
          return sampleRecord_ == null ?
              Sample.SampleRecord.getDefaultInstance() : sampleRecord_;
        }
      }
      /**
       * <code>.org.apache.pinot.plugin.inputformat.protobuf.SampleRecord sample_record = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Sample.SampleRecord, Sample.SampleRecord.Builder, Sample.SampleRecordOrBuilder>
          getSampleRecordFieldBuilder() {
        if (sampleRecordBuilder_ == null) {
          sampleRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Sample.SampleRecord, Sample.SampleRecord.Builder, Sample.SampleRecordOrBuilder>(
                  getSampleRecord(),
                  getParentForChildren(),
                  isClean());
          sampleRecord_ = null;
        }
        return sampleRecordBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.pinot.plugin.inputformat.protobuf.CompositeMessage)
    }

    // @@protoc_insertion_point(class_scope:org.apache.pinot.plugin.inputformat.protobuf.CompositeMessage)
    private static final CompositeMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CompositeMessage();
    }

    public static CompositeMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CompositeMessage>
        PARSER = new com.google.protobuf.AbstractParser<CompositeMessage>() {
      @Override
      public CompositeMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompositeMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CompositeMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CompositeMessage> getParserForType() {
      return PARSER;
    }

    @Override
    public CompositeMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\025composite_types.proto\022,org.apache.pino" +
      "t.plugin.inputformat.protobuf\032\014sample.pr" +
      "oto\032\023complex_types.proto\"\266\001\n\020CompositeMe" +
      "ssage\022O\n\014test_message\030\001 \001(\01329.org.apache" +
      ".pinot.plugin.inputformat.protobuf.TestM" +
      "essage\022Q\n\rsample_record\030\002 \001(\0132:.org.apac" +
      "he.pinot.plugin.inputformat.protobuf.Sam" +
      "pleRecordb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Sample.getDescriptor(),
          ComplexTypes.getDescriptor(),
        });
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_pinot_plugin_inputformat_protobuf_CompositeMessage_descriptor,
        new String[] { "TestMessage", "SampleRecord", });
    Sample.getDescriptor();
    ComplexTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
